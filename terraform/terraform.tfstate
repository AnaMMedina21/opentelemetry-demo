{
  "version": 4,
  "terraform_version": "1.3.1",
  "serial": 4,
  "lineage": "fc624041-6fc5-6c5c-e830-dcaa9847ec0e",
  "outputs": {
    "cluster_dashboard_url": {
      "value": "https://app.lightstep.com/dev-ana/dashboard/8S2f1pJM",
      "type": "string"
    },
    "workload_dashboard_url": {
      "value": [
        "https://app.lightstep.com/dev-ana/dashboard/KgklSChq"
      ],
      "type": [
        "tuple",
        [
          "string"
        ]
      ]
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "lightstep_metric_dashboard",
      "name": "k8s_compute_resources_cluster",
      "provider": "provider[\"registry.terraform.io/lightstep/lightstep\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "chart": [
              {
                "id": "2XYLtrw1",
                "name": "Receive Bandwidth [KB/s]",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "fetch container_network_receive_bytes_total\n| rate\n| filter image =~ \".+\"\n| group_by [namespace], sum\n"
                  }
                ],
                "rank": 9,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "4KSMZT9T",
                "name": "% CPU Comitted [BN]",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "with\n\nalloctable =\nfetch kube_node_status_allocatable\n| filter resource == \"cpu\"\n| latest\n| group_by [], sum;\n\nrequest =\nfetch kube_pod_container_resource_requests\n| filter resource == \"cpu\"\n| reduce 1m, max\n| group_by[namespace, pod, container], max;\n\n\nrunning_pods =\nfetch kube_pod_status_phase\n| reduce 1m, max\n| filter phase==\"Pending\"|| phase == \"Running\"\n| group_by [pod], sum;\n\njoin (request * running_pods) / alloctable * 100\n| group_by [], sum\n\n\n"
                  }
                ],
                "rank": 2,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "9RMNTGBC",
                "name": "Throughput (Reads + Writes)",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "with\n  reads = metric container_fs_reads_bytes_total\n  | rate\n  | filter job=\"kubelet\" \u0026\u0026\n        metrics_path=\"/metrics/cadvisor\" \u0026\u0026\n        container =~\".+\" \u0026\u0026\n        device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)\" \u0026\u0026\n        namespace=~\".+\"\n  | group_by [namespace],sum;\n  writes = metric container_fs_writes_bytes_total\n  | rate\n  | filter job=\"kubelet\" \u0026\u0026\n        metrics_path=\"/metrics/cadvisor\" \u0026\u0026\n        container =~\".+\" \u0026\u0026\n        device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)\" \u0026\u0026\n        namespace=~\".+\"\n  | group_by [namespace],sum;\n\njoin reads+writes\n| group_by [namespace], sum\n"
                  }
                ],
                "rank": 14,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "HjGph40M",
                "name": "% Mem Comitted [BN]",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "with\n\nalloctable =\nfetch kube_node_status_allocatable\n| filter resource == \"memory\"\n| latest\n| group_by [], sum;\n\nrequest =\nfetch kube_pod_container_resource_requests\n| filter resource == \"memory\"\n| reduce 1m, max\n| group_by[namespace, pod, container], max;\n\n\nrunning_pods =\nfetch kube_pod_status_phase\n| reduce 1m, max\n| filter phase==\"Pending\"|| phase == \"Running\"\n| group_by [pod], sum;\n\njoin (request * running_pods) / alloctable * 100\n| group_by [], sum\n\n\n"
                  }
                ],
                "rank": 5,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "L2wDxG2y",
                "name": "% Mem Limit [BN]",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "with\n\nalloctable =\nfetch kube_node_status_allocatable\n| filter resource == \"memory\"\n| latest\n| group_by [], sum;\n\nrequest =\nfetch kube_pod_container_resource_limits\n| filter resource == \"memory\"\n| reduce 1m, max\n| group_by[namespace, pod, container], max;\n\n\nrunning_pods =\nfetch kube_pod_status_phase\n| reduce 1m, max\n| filter phase==\"Pending\"|| phase == \"Running\"\n| group_by [pod], sum;\n\njoin (request * running_pods) / alloctable * 100\n| group_by [], sum\n\n\n"
                  }
                ],
                "rank": 6,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "Wbx0VxX8",
                "name": "Rate of Received Packets",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "fetch container_network_receive_packets_total\n| rate\n| filter image =~ \".+\"\n| group_by [namespace], sum\n"
                  }
                ],
                "rank": 11,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "dLHsv8kn",
                "name": "Memory Usage [MB]",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "fetch container_memory_working_set_bytes\n| latest\n| filter image =~ \".+\" \u0026\u0026 container =~ \".+\"\n| group_by [namespace], sum\n"
                  }
                ],
                "rank": 8,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "gGY1DBPC",
                "name": "Transmit Bandwidth [KB/s]",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "fetch container_network_transmit_bytes_total\n| rate\n| filter image =~ \".+\"\n| group_by [namespace], sum\n"
                  }
                ],
                "rank": 10,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "hKCxBRWK",
                "name": "% CPU Limit [BN]",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "with\n\nalloctable =\nfetch kube_node_status_allocatable\n| filter resource == \"cpu\"\n| latest\n| group_by [], sum;\n\nrequest =\nfetch kube_pod_container_resource_limits\n| filter resource == \"cpu\"\n| reduce 1m, max\n| group_by[namespace, pod, container], max;\n\n\nrunning_pods =\nfetch kube_pod_status_phase\n| reduce 1m, max\n| filter phase==\"Pending\"|| phase == \"Running\"\n| group_by [pod], sum;\n\njoin (request * running_pods) / alloctable * 100\n| group_by [], sum\n\n\n\n\n"
                  }
                ],
                "rank": 3,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "k3KNXFlW",
                "name": "IOPS (Reads + Writes)",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "with\n  reads = metric container_fs_reads_total\n  | rate\n  | filter job=\"kubelet\" \u0026\u0026\n        metrics_path=\"/metrics/cadvisor\" \u0026\u0026\n        container =~\".+\" \u0026\u0026\n        device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)\" \u0026\u0026\n        namespace=~\".+\"\n  | group_by [namespace],sum;\n  writes = metric container_fs_writes_total\n  | rate\n  | filter job=\"kubelet\" \u0026\u0026\n        metrics_path=\"/metrics/cadvisor\" \u0026\u0026\n        container =~\".+\" \u0026\u0026\n        device=~\"(/dev/)?(mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+)\" \u0026\u0026\n        namespace=~\".+\"\n  | group_by [namespace],sum;\n\njoin reads+writes\n| group_by [namespace], sum\n"
                  }
                ],
                "rank": 13,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "pMw9rTFq",
                "name": "CPU Usage",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "fetch container_cpu_usage_seconds_total\n| rate\n| filter image =~ \".+\" \u0026\u0026 container =~ \".+\"\n| group_by [namespace], sum\n"
                  }
                ],
                "rank": 7,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "pWqbxKbF",
                "name": "% CPU Usage [BN]",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "with\ncpu =\n  fetch node_cpu_seconds_total\n  | filter mode!=\"idle\" \u0026\u0026 mode!=\"iowait\" \u0026\u0026 mode!=\"steal\"\n  | rate 5m\n  | group_by [], sum;\n\ncpu_total =\n  fetch node_cpu_seconds_total\n  | rate\n  | group_by [net.host.name, cpu], sum\n  | group_by [], count;\n\njoin cpu / cpu_total * 100\n| group_by [], sum\n"
                  }
                ],
                "rank": 1,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "wRb4f0Mn",
                "name": "% Mem Usage [BN]",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "# 1 - sum(:node_memory_MemAvailable_bytes:sum{cluster=\"$cluster\"}) / sum(node_memory_MemTotal_bytes{job=\"node-exporter\",cluster=\"$cluster\"})\n\n\nwith\nmem =\n  fetch node_memory_MemAvailable_bytes\n  | latest\n  | group_by [], sum;\n\nmem_total =\n  fetch node_memory_MemTotal_bytes\n  | latest\n  | group_by [], sum;\n\njoin 100 - (mem / mem_total * 100)\n| group_by [], sum\n\n\n"
                  }
                ],
                "rank": 4,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "wspytdFL",
                "name": "Rate of Transmitted Packets",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "fetch container_network_transmit_packets_total\n| rate\n| filter image =~ \".+\"\n| group_by [namespace], sum\n"
                  }
                ],
                "rank": 12,
                "type": "timeseries",
                "y_axis": []
              }
            ],
            "dashboard_name": "Kubernetes / Compute Resources / Cluster",
            "id": "8S2f1pJM",
            "project_name": "dev-ana",
            "type": "metric_dashboard"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "lightstep_metric_dashboard",
      "name": "k8s_compute_resources_workload",
      "provider": "provider[\"registry.terraform.io/lightstep/lightstep\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "chart": [
              {
                "id": "1YlddYL4",
                "name": "Receive Bandwidth [KB/s]",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "with\nnet_rx =\n  fetch container_network_receive_bytes_total\n  | rate\n  | filter image =~ \".+\"\n  | filter namespace = \"test\"\n  | group_by [pod, namespace], sum;\n\nowner =\n  fetch kube_pod_owner\n  | filter owner_name =~ \"test(-[bcdfghjklmnpqrstvwxz2456789]{3}[bcdfghjklmnpqrstvwxz2456789]{3}[bcdfghjklmnpqrstvwxz2456789]{4})?$\"\n  | latest;\n\njoin net_rx * owner / 1024\n| group_by [pod, namespace, owner_kind, owner_name], sum\n"
                  }
                ],
                "rank": 3,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "6ySYKxd7",
                "name": "Transmit Bandwidth [KB/s]",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "with\nnet_tx=\n  fetch container_network_transmit_bytes_total\n  | rate\n  | filter image =~ \".+\"\n  | filter namespace = \"test\"\n  | group_by [pod, namespace], sum;\n\nowner =\n  fetch kube_pod_owner\n  | filter owner_name =~ \"test(-[bcdfghjklmnpqrstvwxz2456789]{3}[bcdfghjklmnpqrstvwxz2456789]{3}[bcdfghjklmnpqrstvwxz2456789]{4})?$\"\n  | latest;\n\njoin net_tx*owner / 1024\n| group_by [pod, namespace, owner_kind, owner_name], sum\n"
                  }
                ],
                "rank": 4,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "Bft5Ct9b",
                "name": "CPU Usage",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "with\ncpu =\n  fetch container_cpu_usage_seconds_total\n  | rate\n  | filter image =~ \".+\" \u0026\u0026 container =~ \".+\"\n  | filter namespace = \"test\"\n  | group_by [pod, namespace], sum;\n\nowner =\n  fetch kube_pod_owner\n  | filter owner_name =~ \"test(-[bcdfghjklmnpqrstvwxz2456789]{3}[bcdfghjklmnpqrstvwxz2456789]{3}[bcdfghjklmnpqrstvwxz2456789]{4})?$\"\n  | latest;\n\njoin cpu * owner\n| group_by [pod, namespace, owner_kind, owner_name], sum\n"
                  },
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "b",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "with\nrequest =\n  fetch kube_pod_container_resource_requests\n  | filter resource == \"cpu\"\n  | reduce 1m, max\n  | filter container =~ \".+\"\n  | filter namespace = \"test\"\n  | group_by [pod, namespace], sum;\n\nowner =\n  fetch kube_pod_owner\n  | filter owner_name =~ \"test(-[bcdfghjklmnpqrstvwxz2456789]{3}[bcdfghjklmnpqrstvwxz2456789]{3}[bcdfghjklmnpqrstvwxz2456789]{4})?$\"\n  | latest;\n\njoin request * owner\n| group_by [pod, namespace, owner_kind, owner_name], sum\n"
                  }
                ],
                "rank": 1,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "dkPs0Wrr",
                "name": "Rate of Received Packets",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "with\npkt_rx =\n  fetch container_network_receive_packets_total\n  | rate\n  | filter image =~ \".+\"\n  | filter namespace = \"test\"\n  | group_by [pod, namespace], sum;\n\nowner =\n  fetch kube_pod_owner\n  | filter owner_name =~ \"test(-[bcdfghjklmnpqrstvwxz2456789]{3}[bcdfghjklmnpqrstvwxz2456789]{3}[bcdfghjklmnpqrstvwxz2456789]{4})?$\"\n  | latest;\n\njoin pkt_rx * owner\n| group_by [pod, namespace, owner_kind, owner_name], sum\n"
                  }
                ],
                "rank": 5,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "y9YNQDPD",
                "name": "Rate of Transmitted Packets",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "with\npkt_tx=\n  fetch container_network_transmit_packets_total\n  | rate\n  | filter image =~ \".+\"\n  | filter namespace = \"test\"\n  | group_by [pod, namespace], sum;\n\n\nowner =\n  fetch kube_pod_owner\n  | filter owner_name =~ \"test(-[bcdfghjklmnpqrstvwxz2456789]{3}[bcdfghjklmnpqrstvwxz2456789]{3}[bcdfghjklmnpqrstvwxz2456789]{4})?$\"\n  | latest;\n\njoin pkt_tx * owner\n| group_by [pod, namespace, owner_kind, owner_name], sum\n"
                  }
                ],
                "rank": 6,
                "type": "timeseries",
                "y_axis": []
              },
              {
                "id": "yJVJ1QZG",
                "name": "Memory Usage [MB]",
                "query": [
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "a",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "with\nmem =\n  fetch container_memory_working_set_bytes\n  | latest\n  | filter image =~ \".+\" \u0026\u0026 container =~ \".+\"\n  | filter namespace = \"test\"\n  | group_by [pod, namespace], sum;\n\nowner =\n  fetch kube_pod_owner\n  | filter owner_name =~ \"test(-[bcdfghjklmnpqrstvwxz2456789]{3}[bcdfghjklmnpqrstvwxz2456789]{3}[bcdfghjklmnpqrstvwxz2456789]{4})?$\"\n  | latest;\n\njoin mem * owner / 1024 /1024\n| group_by [pod, namespace, owner_kind, owner_name], sum\n"
                  },
                  {
                    "display": "line",
                    "exclude_filters": [],
                    "filters": [],
                    "group_by": [],
                    "hidden": false,
                    "include_filters": [],
                    "metric": "",
                    "query_name": "b",
                    "spans": [],
                    "timeseries_operator": "",
                    "tql": "with\nrequest =\n  fetch kube_pod_container_resource_requests\n  | filter resource == \"memory\"\n  | reduce 1m, max\n  | filter container =~ \".+\"\n  | filter namespace = \"test\"\n  | group_by [pod, namespace], sum;\n\nowner =\n  fetch kube_pod_owner\n  | filter owner_name =~ \"test(-[bcdfghjklmnpqrstvwxz2456789]{3}[bcdfghjklmnpqrstvwxz2456789]{3}[bcdfghjklmnpqrstvwxz2456789]{4})?$\"\n  | latest;\n\njoin request * owner / 1024 /1024\n| group_by [pod, namespace, owner_kind, owner_name], sum\n"
                  }
                ],
                "rank": 2,
                "type": "timeseries",
                "y_axis": []
              }
            ],
            "dashboard_name": "Kubernetes / Compute Resources / Workload / test",
            "id": "KgklSChq",
            "project_name": "dev-ana",
            "type": "metric_dashboard"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "lightstep_stream",
      "name": "my_stream",
      "provider": "provider[\"registry.terraform.io/lightstep/lightstep\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "custom_data": [
              {
                "name": "playbook",
                "url": "https://www.lightstep.com"
              }
            ],
            "id": "914C8V63",
            "project_name": "dev-ana",
            "query": "operation IN (\"api/v1/charge\") AND \"customer_id\" NOT IN (\"test0\")",
            "stream_name": "my_stream_name",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxNTAwMDAwMDAwMH19"
        }
      ]
    }
  ],
  "check_results": []
}
